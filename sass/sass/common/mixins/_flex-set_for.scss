// 父層啟動flex： @extend %flex_set;

// @for $i from 1 through 12 {}

// 子層 - 平均欄寬
@mixin flex-col-equal($col, $m-gutter, $p-gutter) {
  // 啟動計算公式 ------
  // 欄數（$col）、欄距（$m-gutter）
  flex-basis: calc(100% / #{$col} - #{$m-gutter});
  max-width: calc(100% / #{$col} - #{$m-gutter});
  padding: 0 calc(#{$p-gutter}/2);

  @if $col == 12 {
    @for $i from 1 through 11 {
      &:last-child{
        &:nth-child(12n){ margin-right: 0; }  // 測試，原本沒有的
        &:nth-child(12n-#{$i}){ margin-right: calc( (100% / #{$col} - #{$m-gutter})*#{$i} + (#{$m-gutter}*#{$col})*#{$i} / (#{$col} - 1) ); }
      }
    }
  } @else if $col == 11 {
    @for $i from 1 through 10 {
      &:last-child{
        &:nth-child(11n){ margin-right: 0; }
        &:nth-child(11n-#{$i}){ margin-right: calc( (100% / #{$col} - #{$m-gutter})*#{$i} + (#{$m-gutter}*#{$col})*#{$i} / (#{$col} - 1) ); }
      }
    }
  } @else if $col == 10 {
    @for $i from 1 through 9 {
      &:last-child{
        &:nth-child(10n){ margin-right: 0; }  // 測試，原本沒有的
        &:nth-child(10n-#{$i}){ margin-right: calc( (100% / #{$col} - #{$m-gutter})*#{$i} + (#{$m-gutter}*#{$col})*#{$i} / (#{$col} - 1) ); }
      }
    }
  } @else if $col == 9 {
    @for $i from 1 through 8 {
      &:last-child{
        &:nth-child(9n){ margin-right: 0; }  // 測試，原本沒有的
        &:nth-child(9n-#{$i}){ margin-right: calc( (100% / #{$col} - #{$m-gutter})*#{$i} + (#{$m-gutter}*#{$col})*#{$i} / (#{$col} - 1) ); }
      }
    }
  } @else if $col == 8 {
    @for $i from 1 through 7 {
      &:last-child{
        &:nth-child(8n){ margin-right: 0; }  // 測試，原本沒有的
        &:nth-child(8n-#{$i}){ margin-right: calc( (100% / #{$col} - #{$m-gutter})*#{$i} + (#{$m-gutter}*#{$col})*#{$i} / (#{$col} - 1) ); }
      }
    }
  } @else if $col == 7 {
    @for $i from 1 through 6 {
      &:last-child{
        &:nth-child(7n){ margin-right: 0; }
        &:nth-child(7n-#{$i}){ margin-right: calc( (100% / #{$col} - #{$m-gutter})*#{$i} + (#{$m-gutter}*#{$col})*#{$i} / (#{$col} - 1) ); }
      }
    }
  } @else if $col == 6 {
    @for $i from 1 through 5 {
      &:last-child{
        &:nth-child(6n){ margin-right: 0; }  // 測試，原本沒有的
        &:nth-child(6n-#{$i}){ margin-right: calc( (100% / #{$col} - #{$m-gutter})*#{$i} + (#{$m-gutter}*#{$col})*#{$i} / (#{$col} - 1) ); }
      }
    }
  } @else if $col == 5 {
    @for $i from 1 through 4 {
      &:last-child{
        &:nth-child(5n){ margin-right: 0; }
        &:nth-child(5n-#{$i}){ margin-right: calc( (100% / #{$col} - #{$m-gutter})*#{$i} + (#{$m-gutter}*#{$col})*#{$i} / (#{$col} - 1) ); }
      }
    }
  } @else if $col == 4 {
    @for $i from 1 through 3 {
      &:last-child{
        &:nth-child(4n){ margin-right: 0 !important; }
        &:nth-child(4n-#{$i}){ margin-right: calc( (100% / #{$col} - #{$m-gutter})*#{$i} + (#{$m-gutter}*#{$col})*#{$i} / (#{$col} - 1) ); }
      }
    }
  } @else if $col == 3 {
    @for $i from 1 through 2 {
      &:last-child{
        &:nth-child(3n){ margin-right: 0 !important; }
        &:nth-child(3n-#{$i}){ margin-right: calc( (100% / #{$col} - #{$m-gutter})*#{$i} + (#{$m-gutter}*#{$col})*#{$i} / (#{$col} - 1) ); }
      }
    }
  } @else if $col == 2 {
    &:last-child{  
      @for $i12 from 1 through 12 {
        &:nth-child(12n-#{$i12}){ margin-right: 0 !important; }
      }
    }
  } @else if $col == 1 {
    &:last-child{ margin-right: 0 !important; }
  }
}

// 子層 - 自訂欄寬
@mixin flex-col($col, $m-gutter, $p-gutter) {
  // 啟動計算公式 ------
  // 佔欄數（$col）、欄距（$m-gutter）
  // width ＝ 100% / 12 * 佔幾欄 - 欄距
  flex-basis: calc(100% / 12 * #{$col} - #{$m-gutter});
  max-width: calc(100% / 12 * #{$col} - #{$m-gutter});
  padding: 0 calc(#{$p-gutter}/2);
}

// 範例：
// 子層 - 平均欄寬
// .col{
//   @include flex-col-equal(欄數, margin, padding);
// }
// 子層 - 自訂欄寬
// .col{
//   @include flex-col(欄數, margin, padding);
// }







